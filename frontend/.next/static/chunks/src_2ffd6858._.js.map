{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tom/code/fullstack_todo/frontend/src/store/todoSlice.ts"],"sourcesContent":["// src/store/todoSlice.ts\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\n// --- Define the type for a todo item\nexport interface Todo {\n  id: number\n  text: string\n}\n\n// --- Define the type for this slice's state\ninterface TodoState {\n  items: Todo[]\n}\n\n// --- Initial state\nconst initialState: TodoState = {\n  items: [],\n}\n\n// --- Create the slice\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    // Accepts a payload of type Todo\n    addTodo: (state, action: PayloadAction<Todo>) => {\n      state.items.push(action.payload)\n    },\n    // Optional: remove a todo by id\n    removeTodo: (state, action: PayloadAction<number>) => {\n      state.items = state.items.filter(todo => todo.id !== action.payload)\n    },\n  },\n})\n\n// --- Export action creators and the reducer\nexport const { addTodo, removeTodo } = todoSlice.actions\nexport default todoSlice.reducer"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;AACzB;;AAaA,oBAAoB;AACpB,MAAM,eAA0B;IAC9B,OAAO,EAAE;AACX;AAEA,uBAAuB;AACvB,MAAM,YAAY,CAAA,GAAA,qYAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,iCAAiC;QACjC,SAAS,CAAC,OAAO;YACf,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,OAAO;QACjC;QACA,gCAAgC;QAChC,YAAY,CAAC,OAAO;YAClB,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,OAAO,OAAO;QACrE;IACF;AACF;AAGO,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,UAAU,OAAO;uCACzC,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/tom/code/fullstack_todo/frontend/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './todoSlice';\n\nexport const store = configureStore({\n  reducer: { todos: todoReducer },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,QAAQ,CAAA,GAAA,qYAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QAAE,OAAO,4HAAA,CAAA,UAAW;IAAC;AAChC","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/tom/code/fullstack_todo/frontend/src/app/providers.tsx"],"sourcesContent":["'use client'\n\nimport { Provider } from 'react-redux'\nimport { store } from '../store'\nimport '../app/globals.css'\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return <Provider store={store}>{children}</Provider>\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;;AAMO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBAAO,4TAAC,qSAAA,CAAA,WAAQ;QAAC,OAAO,wHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC;KAFgB","debugId":null}}]
}